@page "/userdex"
@using RandomStuffFrontEnd.Components.Models
@using RandomStuffFrontEnd.Components.Services
@rendermode InteractiveServer

@inject HttpClient HttpClient
@inject NavigationManager Navigation
@inject UserSession userSession

<h3>UserDex</h3>

@if (loading)
{
    <p><em>Loading...</em></p>
}

else if (userSession.UserId == 0)
{
    <p>Redirecting to login...</p>
}

else
{
    <table class="UserDex">
        <thead>
            <tr>
                <th>DexEntry</th>
                <th>Name</th>
                <th>Nickname</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var capturedPokemon in userCapturedPokemon)
            {
                <tr>
                    <td>@capturedPokemon.PokemonId</td>
                    <td>@capturedPokemon.Pokemon.PokemonName</td>
                    <td>@capturedPokemon.Nickname</td>
                    <td>
                        <img src="https://github.com/PokeAPI/sprites/blob/master/sprites/items/poke-ball.png?raw=true" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private bool loading = true;
    private List<CapturedPokemon> userCapturedPokemon;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await userSession.LoadSessionUserIdAsync();

            if (userSession.UserId == 0)
            {
                Navigation.NavigateTo("/login");
                return;
            }

            userCapturedPokemon = await HttpClient.GetFromJsonAsync<List<CapturedPokemon>>($"/GetUserCapturedPokemon?UserId={userSession.UserId}");

            loading = false;
            StateHasChanged();
        }
    }
}
