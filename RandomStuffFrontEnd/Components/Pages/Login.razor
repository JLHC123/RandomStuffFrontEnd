@page "/login"
@using Radzen
@using Radzen.Blazor
@using RandomStuffFrontEnd.Components.Models
@using RandomStuffFrontEnd.Components.Services
@rendermode InteractiveServer

@inject HttpClient httpClient
@inject NavigationManager Navigation
@inject UserSession userSession

<h3>Login</h3>

<RadzenTemplateForm Data="@user" TItem="User" Submit="@OnLogin">
    <RadzenText>Username</RadzenText>
    <RadzenTextBox @bind-Value="@user.UserName" Style="width:100%" />
    <RadzenText>Password</RadzenText>
    <RadzenPassword @bind-Value="@user.Password" Style="width:100%" ShowPasswordToggle="true" />
    <RadzenButton ButtonType="ButtonType.Submit" Text="Login" Style="margin-top: 16px; background-color:#d50032; color:white;" />

    <p style="color:red">@ErrorMessage</p>
</RadzenTemplateForm>

@code {
    User user = new User();
    private string ErrorMessage;

    async Task OnLogin(User user)
    {
        try
        {
            var response = await httpClient.PostAsJsonAsync("/Login", user);

            if (response.IsSuccessStatusCode)
            {
                var userResponse = await response.Content.ReadFromJsonAsync<UserLoginResponse>();
                user.UserId = userResponse.UserId;
                await userSession.Login(user.UserId);
                Navigation.NavigateTo("/userdex");
            }
            else
            {
                ErrorMessage = "Incorrect username or password.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = "An error occurred while trying to log in.";
            Console.WriteLine(ex.Message);
        }
    }
}